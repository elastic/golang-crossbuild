ARG DEBIAN_VERSION
FROM debian:${DEBIAN_VERSION}

ARG DEBIAN_VERSION
# Replace sources.list in order to use archive.debian.org.
COPY sources-debian${DEBIAN_VERSION}.list /etc/apt/sources.list

RUN apt-get -o Acquire::Check-Valid-Until=false update -y --no-install-recommends --allow-unauthenticated \
        && apt-get upgrade -y --no-install-recommends --allow-unauthenticated \
        && apt-get dist-upgrade -y --no-install-recommends --allow-unauthenticated \
        && apt-get install -y --no-install-recommends --allow-unauthenticated \
            build-essential \
            ca-certificates \
            curl \
            git \
            gnupg \
            make \
            file \
            flex \
            bison \
{{- if or (eq .DEBIAN_VERSION "10") (eq .DEBIAN_VERSION "11")}}
            binutils-multiarch \
            binutils-multiarch-dev \
            python3-venv \
            python3-pip \
            python3 \
{{- end }}
        && rm -rf /var/lib/apt/lists/*

{{- if eq .DEBIAN_VERSION "10"}}
RUN ln -s /usr/bin/pip3 /usr/bin/pip
{{- end }}

COPY install-go.sh /tmp/install-go.sh
RUN chmod ugo+rx /tmp/install-go.sh \
  && /tmp/install-go.sh \
  && rm /tmp/install-go.sh

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
WORKDIR $GOPATH

COPY rootfs /

# show the GLIBC version
RUN ldd --version

WORKDIR /
RUN go mod init github.com/elastic/golang-crossbuild-$GOLANG_VERSION \
    && go get -d . \
    && go build -o /crossbuild /entrypoint.go \
    && rm -rf /go/* /root/.cache/* /entrypoint.go

RUN curl -sSLO https://storage.googleapis.com/obs-ci-cache/beats/libpcap-1.8.1.tar.gz \
  && echo "673dbc69fdc3f5a86fb5759ab19899039a8e5e6c631749e48dcd9c6f0c83541e  libpcap-1.8.1.tar.gz" | sha256sum -c - \
  && mkdir /libpcap \
	&& tar -xzf libpcap-1.8.1.tar.gz -C /libpcap \
  && rm libpcap-1.8.1.tar.gz


ENV GOLANG_CROSSBUILD=1
VOLUME      /app
WORKDIR     /app
ENTRYPOINT  ["/crossbuild"]
