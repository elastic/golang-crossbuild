ARG REPOSITORY
ARG VERSION
ARG TAG_EXTENSION=''
FROM ${REPOSITORY}/golang-crossbuild:${VERSION}-base${TAG_EXTENSION}

RUN dpkg --add-architecture armhf \
    && apt-get update -qq \
    && apt-get install -y \
      --no-install-recommends \
      --allow-unauthenticated \
        crossbuild-essential-armhf \
        linux-libc-dev-armhf-cross

RUN apt-get install -y \
      --no-install-recommends \
      --allow-unauthenticated \
        libc-dev:armhf \
        libpopt-dev:armhf \
        linux-libc-dev:armhf

#Â librpm-dev
RUN apt-get install -y \
      --no-install-recommends \
      --allow-unauthenticated \
        librpm-dev:armhf \
        librpm3:armhf \
        librpmio3:armhf \
        librpmbuild3:armhf \
        librpmsign3:armhf \
        libxml2-dev:armhf \
        libsqlite3-dev:armhf \
        libnss3:armhf \
        libsqlite3-0:armhf \
        libxml2:armhf \
        libsqlite3-0:armhf

# libsystemd-dev
RUN apt-get install -y  \
      --no-install-recommends \
      --allow-unauthenticated \
        libsystemd-dev:armhf libsystemd0:armhf liblz4-1:armhf \
    && rm -rf /var/lib/apt/lists/*

COPY rootfs /

# Basic test
RUN cd / \
  && arm-linux-gnueabihf-gcc helloWorld.c -o helloWorld \
  && file helloWorld \
  && readelf -h helloWorld \
  && file helloWorld | cut -d "," -f 5 | grep -c 'armhf.so'\
  && rm helloWorld.c helloWorld

# Build-time metadata as defined at http://label-schema.org.
ARG BUILD_DATE
ARG IMAGE
ARG VCS_REF
ARG VCS_URL
LABEL org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name=$IMAGE \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.schema-version="1.0"
