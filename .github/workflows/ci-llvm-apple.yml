---
name: ci-llvm-apple

on:
  # disable for now unless it runs manually
  workflow_dispatch:
  #push:
  #  paths:
  #    - 'go/llvm-apple/**'
  #    - '.github/workflows/ci-llvm-apple.yml'
  #    - '.github/actions/build-push/**'

permissions:
  contents: read

jobs:
  build-push:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-24.04", "ubuntu-24.04-arm" ]
        debian-version: [
          "10",
          "11",
          "12"
        ]
    runs-on: ${{ matrix.os }}
    env:
      TAG_EXTENSION: "-debian${{matrix.debian-version}}-${{ contains(matrix.os, 'arm') && 'arm64' || 'amd64' }}"
      DEBIAN_VERSION: "${{matrix.debian-version}}"
    steps:
      - uses: actions/checkout@v4

      - name: Docker build and push
        uses: ./.github/actions/build-push
        with:
          docker-registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          docker-username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          docker-password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}
          make-directory: 'go/llvm-apple'
          make-file: 'Makefile'
        env:
          # NOTE: For some reason the repository is not production but staging.
          REPOSITORY: 'docker.elastic.co/observability-ci'
          # TODO: use the google bucket instead
          GS_BUCKET_PATH: "golang-crossbuild-tmp"
          # TODO: bypass access to the google bucket for now
          CI: "false"
          # NOTE: as long as we don't use the google bucket but downloading from github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
