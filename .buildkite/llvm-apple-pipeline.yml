# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  SETUP_GVM_VERSION: "v0.5.1"
  IMAGE_UBUNTU_X86_64: "family/core-ubuntu-2204"
  IMAGE_UBUNTU_ARM_64: "core-ubuntu-2004-aarch64"
  DOCKER_REGISTRY: "docker.elastic.co"
  STAGING_IMAGE: "${DOCKER_REGISTRY}/observability-ci"
  MAKEFILE: "go/llvm-apple"
  BUILDX: "0"

# This section is used to define the plugins that will be used in the pipeline.
# See https://buildkite.com/docs/pipelines/integrations/plugins/using#using-yaml-anchors-with-plugins
common:
  - oblt_google_auth_plugin: &gcp_oidc_plugin
      # See https://github.com/elastic/oblt-infra/blob/main/conf/resources/repos/golang-crossbuild/01-gcp-buildkite-oidc.tf
      # This plugin authenticates to Google Cloud using the OIDC token.
      elastic/oblt-google-auth#v1.3.0:
        lifetime: 10800 # seconds
        project-id: "elastic-observability-ci"
        project-number: "911195782929"

steps:
  - label: ":linux: Build LLVM Apple / Ubuntu X86_64 - {{matrix.debianVersion}}"
    key: "build-ubuntu-x86-llvm-apple"
    if: build.env("BUILDKITE_PULL_REQUEST") != "false" || build.source == "ui" || build.branch == "main" || build.branch =~ /^[0-9]+\.[0-9]+$$/
    command:
      - ".buildkite/scripts/llvm-apple/build.sh ${MAKEFILE}"
      - ".buildkite/scripts/llvm-apple/publish.sh ${MAKEFILE}"
    notify:
      - github_commit_status:
          context: "Build LLVM Apple / Ubuntu X86_64"
    env:
      TAG_EXTENSION: "-debian{{matrix.debianVersion}}-amd64"
      REPOSITORY: "${STAGING_IMAGE}"
      DEBIAN_VERSION: "{{matrix.debianVersion}}"
    agents:
      provider: "gcp"
      image: "${IMAGE_UBUNTU_X86_64}"
    plugins:
      - *gcp_oidc_plugin
    matrix:
      setup:
        debianVersion:
          - "10"
          - "11"
          - "12"

  - label: ":linux: Build LLVM Apple / Ubuntu ARM - {{matrix.debianVersion}}"
    key: "build-ubuntu-arm-llvm-apple"
    if: build.env("BUILDKITE_PULL_REQUEST") != "false" || build.source == "ui" || build.branch == "main" || build.branch =~ /^[0-9]+\.[0-9]+$$/
    command:
      - ".buildkite/scripts/llvm-apple/build.sh ${MAKEFILE}"
      - ".buildkite/scripts/llvm-apple/publish.sh ${MAKEFILE}"
    notify:
      - github_commit_status:
          context: "Build LLVM Apple / Ubuntu ARM"
    env:
      TAG_EXTENSION: "-debian{{matrix.debianVersion}}-arm64"
      REPOSITORY: "${STAGING_IMAGE}"
      DEBIAN_VERSION: "{{matrix.debianVersion}}"
    agents:
      provider: "aws"
      imagePrefix: "${IMAGE_UBUNTU_ARM_64}"
      instanceType: "t4g.large"
    plugins:
      - *gcp_oidc_plugin
    matrix:
      setup:
        debianVersion:
          - "10"
          - "11"
          - "12"
