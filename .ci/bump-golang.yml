---
name: Bump golang-version to latest version

scms:
  githubConfig:
    kind: github
    spec:
      user: '{{ requiredEnv "GIT_USER" }}'
      email: '{{ requiredEnv "GIT_EMAIL" }}'
      owner: elastic
      repository: golang-crossbuild
      token: '{{ requiredEnv "GITHUB_TOKEN" }}'
      username: '{{ requiredEnv "GIT_USER" }}'
      branch: '{{ requiredEnv "BRANCH" }}'

actions:
  golang-crossbuild:
    kind: github/pullrequest
    scmid: githubConfig
    sourceid: latestGoVersion
    spec:
      automerge: false
      labels:
        - dependencies
        - backport-skip
      title: '[Automation] Bump Golang version to {{ source "latestGoVersion" }}'

sources:
  minor:
    name: Get minor version
    kind: shell
    transformers:
      - findsubmatch:
          pattern: '^\d+.(\d+)'
          captureindex: 1
    spec:
      command: echo {{ requiredEnv "GO_MINOR" }}

  latestGoVersion:
    name: Get Latest Go Release
    kind: githubrelease
    dependson:
      - minor
    transformers:
      - trimprefix: go
    spec:
      owner: golang
      repository: go
      token: '{{ requiredEnv "GITHUB_TOKEN" }}'
      username: '{{ requiredEnv "GIT_USER" }}'
      versionfilter:
        kind: regex
        pattern: go1\.{{ source "minor" }}(\.(\d*))?$

conditions:
  dockerTag:
    name: Is docker image golang:{{ source "latestGoVersion" }} published
    kind: dockerimage
    spec:
      image: golang
      tag: '{{ source "latestGoVersion" }}'
    sourceid: latestGoVersion
  is:
    name: Is version '{{ source "latestGoVersion" }}' not updated in 'go/Makefile.common'?
    kind: shell
    spec:
      command: 'grep -v -q {{ source "latestGoVersion" }} go/Makefile.common #'
    sourceid: latestGoVersion

targets:
  update-go-versions:
    name: "Update go versions"
    kind: shell
    sourceid: latestGoVersion
    scmid: githubConfig
    spec:
      command: .ci/bump-go-release-version.sh
