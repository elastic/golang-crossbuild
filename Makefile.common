REPOSITORY    ?= docker.elastic.co/beats-dev
VCS_REF       := $(shell git rev-parse HEAD)
VCS_URL       := https://github.com/elastic/golang-crossbuild
BUILD_DATE    := $(shell date -u +"%Y-%m-%dT%H:%M:%SZ")
.DEFAULT_GOAL := build
NPCAP_VERSION := 1.80
NPCAP_FILE    := npcap-$(NPCAP_VERSION)-oem.exe
SUFFIX_NPCAP_VERSION := -npcap-$(NPCAP_VERSION)
NPCAP_REPOSITORY := docker.elastic.co/observability-ci
GS_BUCKET_PATH ?=


ifeq ($(BUILDX),1)
ifeq ($(shell test $(DEBIAN_VERSION) -ge 10; echo $$?),0)
DOCKER_MULTIARCH := 1
endif
endif

# Requires login at google storage.
copy-npcap:
	@echo 'cp gs://$(GS_BUCKET_PATH)/private/$(NPCAP_FILE)'
ifeq ($(CI),true)
	@gsutil cp gs://$(GS_BUCKET_PATH)/private/$(NPCAP_FILE) ../npcap/lib/$(NPCAP_FILE)
else
	@echo 'Only available if running in the CI'
	mkdir -p ../npcap/lib/
	touch ../npcap/lib/npcap-1.80-oem.exe
endif

# Requires login at google storage.
copy-sdks:
	@echo 'cp gs://$(GS_BUCKET_PATH)/sdks'
ifeq ($(CI),true)
	@gcloud storage cp gs://$(GS_BUCKET_PATH)/sdks . --recursive
else
	@echo 'Only available if running in the CI'
	mkdir -p sdks/
	gh api https://github.com/the-tcpdump-group/tcpdump-htdocs/raw/refs/heads/master/release/libpcap-1.8.1.tar.gz -H "Accept: application/vnd.github.raw" > sdks/libpcap-1.8.1.tar.gz
	curl -sSfL -o sdks/MacOSX10.11.sdk.tar.xz https://s3.amazonaws.com/beats-files/deps/MacOSX10.11.sdk.tar.xz
	curl -sSfL -o sdks/WpdPack_4_1_2.zip https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip
endif

push:
	$(MAKE) atomic-push

push-arm:
	@echo ">> Pushing $(REPOSITORY)/$(NAME):$(VERSION)$(SUFFIX)$(TAG_EXTENSION)"
	@docker push "$(REPOSITORY)/$(NAME):$(VERSION)$(SUFFIX)$(TAG_EXTENSION)"

.PHONY: push push-arm

# Requires login at https://docker.elastic.co:7000/.
atomic-push:
	@echo ">> Pushing $(REPOSITORY)/$(NAME):$(VERSION)$(SUFFIX)$(TAG_EXTENSION)"
	@docker push "$(REPOSITORY)/$(NAME):$(VERSION)$(SUFFIX)$(TAG_EXTENSION)"
